buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.guardsquare:proguard-gradle:7.4.0'
	}
}

plugins {
	id 'java'
}

configurations {
	enigmaRuntime
}

repositories {
	mavenCentral()
	maven {
		name 'Quilt Repository'
		url 'https://maven.quiltmc.org/repository/release'
	}
	maven {
		name 'Minecraft Libraries'
		url 'https://libraries.minecraft.net'
	}

	// Enigma dependencies
	maven {
		url 'https://maven.fabricmc.net/'
		content {
			includeModule('net.fabricmc', 'cfr')
		}
	}
	maven {
		// Vineflower snapshots
		url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
	}
}

dependencies {
	implementation "com.mojang:datafixerupper:4.1.27"

	enigmaRuntime "org.quiltmc:enigma:${enigma_version}"
	enigmaRuntime "org.quiltmc:enigma-swing:${enigma_version}"
	enigmaRuntime rootProject
}

var outputJar = file('output/obf.jar')
var mappings = file('mappings/')
var profile = file('profile.json')

task testEnigma(type: JavaExec, dependsOn: "obfuscate") {
	mainClass = "org.quiltmc.enigma.gui.Main"
	classpath = configurations.enigmaRuntime

	args('-jar', outputJar, '-mappings', mappings.getAbsolutePath(), '-profile', profile.getAbsolutePath())
	doFirst {
		mappings.mkdirs()
	}
}

task obfuscate(type: proguard.gradle.ProGuardTask) {
	verbose
	injars jar
	outjars outputJar

	libraryjars "${System.getProperty('java.home')}/jmods/java.base.jmod", jarfilter: '!**.jar', filter: '!module-info.class'
	libraryjars sourceSets.main.compileClasspath

	dontshrink()
	dontoptimize()
	keepclasseswithmembers 'public class * {\
\t\tpublic static void main(java.lang.String[]);\
\t}'
	keepattributes 'SourceFile'
	keepattributes '*Annotation*'
	keepattributes 'InnerClasses'
	keepattributes 'NestMembers'
	keepattributes 'EnclosingMethod'
	keepattributes 'Deprecated'
	keepattributes 'Signature'
	printmapping 'output/out.txt'
}
